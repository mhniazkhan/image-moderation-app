import React, { useState } from "react";

export default function BengaliImageReport() {
  const [image, setImage] = useState(null);
  const [preview, setPreview] = useState(null);
  const [report, setReport] = useState(null);
  const [loading, setLoading] = useState(false);

  // ржЫржмрж┐ ржЖржкрж▓рзЛржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
  const handleImageUpload = (e) => {
    const file = e.target.files[0];
    if (file) {
      setImage(file);
      setPreview(URL.createObjectURL(file));
      setReport(null);
    }
  };

  // ржЫржмрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг (ржбрзЗржорзЛ ржЬржирзНржп ржХрзГрждрзНрж░рж┐ржо рж░рж┐ржкрзЛрж░рзНржЯ)
  const analyzeImage = () => {
    if (!image) return;
    setLoading(true);

    // AI ржмрж╛ API ржерзЗржХрзЗ ржЖрж╕рж╛ рж░рж┐ржкрзЛрж░рзНржЯрзЗрж░ ржкрж░рж┐ржмрж░рзНрждрзЗ ржбрзЗржорзЛ ржбрж╛ржЯрж╛
    setTimeout(() => {
      setReport({
        issues: [
          "ржЖржВрж╢рж┐ржХ ржиржЧрзНржирждрж╛ (Partial Nudity) ржЖржЫрзЗ",
          "ржХрзНржпрж╛ржкрж╢ржирзЗ рж╣рж┐ржВрж╕рж╛рждрзНржоржХ рж╢ржмрзНржж ржмрзНржпржмрж╣рзГржд рж╣ржпрж╝рзЗржЫрзЗ",
          "ржЫржмрж┐рж░ ржХрж┐ржЫрзБ ржЕржВрж╢ ржЕрж╕рзНржкрж╖рзНржЯ ржмрж╛ ржмрзНрж▓рж╛рж░ ржХрж░рж╛ ржкрзНрж░ржпрж╝рзЛржЬржи"
        ],
        details: [
          {
            problem: "ржЖржВрж╢рж┐ржХ ржиржЧрзНржирждрж╛",
            part: "ржЫржмрж┐рж░ ржорж╛ржЭржЦрж╛ржирзЗ",
            cause: "ржлрзЗрж╕ржмрзБржХ ржХржорж┐ржЙржирж┐ржЯрж┐ рж╕рзНржЯрзНржпрж╛ржирзНржбрж╛рж░рзНржб рж▓ржЩрзНржШржи",
            effect: "ржкрзЛрж╕рзНржЯ рж╕рж╛рж╕ржкрзЗржирзНржб рж╣рждрзЗ ржкрж╛рж░рзЗ"
          },
          {
            problem: "рж╣рж┐ржВрж╕рзНрж░ рж╢ржмрзНржж",
            part: "ржХрзНржпрж╛ржкрж╢ржи",
            cause: "ржжрж░рзНрж╢ржХржжрзЗрж░ ржЬржирзНржп ржЕржкрзНрж░рзАрждрж┐ржХрж░",
            effect: "ржирзЗрждрж┐ржмрж╛ржЪржХ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛"
          },
          {
            problem: "ржЕрж╕рзНржкрж╖рзНржЯрждрж╛",
            part: "ржЫржмрж┐рж░ ржмрж╛ржБ ржжрж┐ржХрзЗ",
            cause: "ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБрж░ рж╕рзНржкрж╖рзНржЯрждрж╛ ржХржорж╛ржирзЛ",
            effect: "ржжрж░рзНрж╢ржХ ржмрж┐ржнрзНрж░рж╛ржирзНржд рж╣рждрзЗ ржкрж╛рж░рзЗ"
          }
        ],
        solutions: [
          "ржиржЧрзНржи ржЕржВрж╢ ржмрзНрж▓рж╛рж░ ржХрж░рзБржи ржЕржержмрж╛ ржХрзЗржЯрзЗ ржжрж┐ржи",
          "ржХрзНржпрж╛ржкрж╢ржи ржерзЗржХрзЗ рж╣рж┐ржВрж╕рзНрж░ рж╢ржмрзНржж ржмрж╛ржж ржжрж┐ржи ржЕржержмрж╛ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
          "ржЫржмрж┐ рж╕рзНржкрж╖рзНржЯ ржХрж░рж╛рж░ ржЬржирзНржп ржЙржирзНржиржд рж░рзЗржЬрзЛрж▓рж┐ржЙрж╢ржирзЗрж░ ржЫржмрж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи"
        ],
        checklist: [
          "ржЫржмрж┐ ржлрзЗрж╕ржмрзБржХ ржХржорж┐ржЙржирж┐ржЯрж┐ ржЧрж╛ржЗржбрж▓рж╛ржЗржи ржорзЗржирзЗ ржЪрж▓рзЗржЫрзЗ",
          "ржХрзНржпрж╛ржкрж╢ржи ржЭрзБржБржХрж┐ржорзБржХрзНржд ржУ рж╢рзНрж░рзБрждрж┐ржоржзрзБрж░",
          "ржЫржмрж┐ рж╕рзНржкрж╖рзНржЯ ржУ ржкрж░рж┐рж╖рзНржХрж╛рж░"
        ],
        nextSteps: [
          "рж╕ржВрж╢рзЛржзрж┐ржд ржЫржмрж┐ ржУ ржХрзНржпрж╛ржкрж╢ржи ржкрзБржирж░рж╛ржпрж╝ ржЖржкрж▓рзЛржб ржХрж░рзБржи",
          "ржкрзНрж░рзЯрзЛржЬржирзЗ ржЖржмрж╛рж░ ржЪрзЗржХ ржХрж░рзБржи",
          "ржирж┐ржпрж╝ржорж┐ржд рж╕рждрж░рзНржХрждрж╛ ржЕржмрж▓ржорзНржмржи ржХрж░рзБржи"
        ]
      });
      setLoading(false);
    }, 1500);
  };

  return (
    <div className="min-h-screen bg-gray-100 py-10 px-4 text-center">
      <h1 className="text-3xl font-bold mb-6">ЁЯЫбя╕П ржЫржмрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржУ рж░рж┐ржкрзЛрж░рзНржЯ (ржмрж╛ржВрж▓рж╛рзЯ)</h1>

      <div className="max-w-xl mx-auto bg-white shadow p-6 rounded-xl">
        {preview ? (
          <img
            src={preview}
            alt="ржЖржкрж▓рзЛржб ржХрж░рж╛ ржЫржмрж┐"
            className="rounded-lg border mb-4 max-h-60 mx-auto"
          />
        ) : (
          <div className="border-dashed border-2 p-12 rounded-lg text-gray-500 mb-4">
            ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи
          </div>
        )}

        <input
          type="file"
          accept="image/*"
          onChange={handleImageUpload}
          className="mb-4"
        />

        <button
          onClick={analyzeImage}
          disabled={!image || loading}
          className="bg-blue-600 text-white px-5 py-2 rounded disabled:opacity-50"
        >
          {loading ? "ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржЪрж▓ржЫрзЗ..." : "ржЫржмрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзБржи"}
        </button>

        {report && (
          <div className="mt-6 text-left">
            <h2 className="text-2xl font-semibold mb-3">ЁЯУЛ ржЫржмрж┐рж░ рж╕ржорж╕рзНржпрж╛:</h2>
            <ul className="list-disc list-inside mb-4">
              {report.issues.map((issue, i) => (
                <li key={i}>{issue}</li>
              ))}
            </ul>

            <h3 className="text-xl font-semibold mb-2">ЁЯФН рж╕ржорж╕рзНржпрж╛рж░ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд:</h3>
            <table className="w-full table-auto border-collapse border border-gray-300 mb-4 text-sm">
              <thead>
                <tr className="bg-gray-200">
                  <th className="border border-gray-300 px-2 py-1">рж╕ржорж╕рзНржпрж╛</th>
                  <th className="border border-gray-300 px-2 py-1">ржЕржВрж╢</th>
                  <th className="border border-gray-300 px-2 py-1">ржХрж╛рж░ржг</th>
                  <th className="border border-gray-300 px-2 py-1">ржкрзНрж░ржнрж╛ржм</th>
                </tr>
              </thead>
              <tbody>
                {report.details.map((row, i) => (
                  <tr key={i}>
                    <td className="border border-gray-300 px-2 py-1">{row.problem}</td>
                    <td className="border border-gray-300 px-2 py-1">{row.part}</td>
                    <td className="border border-gray-300 px-2 py-1">{row.cause}</td>
                    <td className="border border-gray-300 px-2 py-1">{row.effect}</td>
                  </tr>
                ))}
              </tbody>
            </table>

            <h3 className="text-xl font-semibold mb-2">тЬЕ рж╕ржорж╛ржзрж╛ржи:</h3>
            <ul className="list-disc list-inside mb-4">
              {report.solutions.map((sol, i) => (
                <li key={i}>{sol}</li>
              ))}
            </ul>

            <h3 className="text-xl font-semibold mb-2">ЁЯУЛ ржЪрзЗржХрж▓рж┐рж╕рзНржЯ:</h3>
            <ul className="list-disc list-inside mb-4">
              {report.checklist.map((item, i) => (
                <li key={i}>{item}</li>
              ))}
            </ul>

            <h3 className="text-xl font-semibold mb-2">тЮбя╕П ржкрж░ржмрж░рзНрждрзА ржХрж░ржгрзАржпрж╝:</h3>
            <ul className="list-disc list-inside mb-4">
              {report.nextSteps.map((step, i) => (
                <li key={i}>{step}</li>
              ))}
            </ul>
          </div>
        )}
      </div>
    </div>
  );
}
